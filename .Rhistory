as.vector(pin.o$a %*% x)
}
ap.o <- arpack(fa, options=list(n=nrow(pin.o$a),nev=1,which="LM",maxiter=30120),sym=TRUE);
v <- ap.o$vectors
lambda <- ap.o$values
maxSR <- log(lambda)
####
selS.idx = c(1:ncol(pin.o$e))
tmpE.m <- pin.o$e[,selS.idx]
sr.lo <- list()
k.v <- rowSums(pin.o$a)
local=TRUE
method=1
maxSR=maxSR
quants.v=c(0.1,0.9)
for(s in 1:ncol(tmpE.m)){
p.m <- matrix(0,nrow=length(tmpE.m[,s]),ncol=length(tmpE.m[,s]))
rownames(p.m) <- rownames(pin.o$a)
colnames(p.m) <- rownames(pin.o$a)
if(method==1){
for(g in 1:nrow(pin.o$a)){
nn.idx <- which(pin.o$a[g,]==1)
term2.v <- tmpE.m[,s][nn.idx]/sum(tmpE.m[,s][nn.idx])
p.m[g,nn.idx] <- term2.v
}
}else if(method==2){
alpha.v <- quantile(as.vector(tmpE.m[,s]),probs=quants.v)
beta.v <- betaFn(tmpE.m[,s],alpha.v)
for(g in 1:nrow(pin.o$a)){
nn.idx <- which(pin.o$a[g,]==1)
term2.v <- tmpE.m[,s][nn.idx]/sum(tmpE.m[,s][nn.idx])
p.m[g,nn.idx] <- (1-beta.v[g])/k.v[g] + beta.v[g]*term2.v
}
}
fp <- function(x,extra=NULL) {
as.vector(p.m %*% x)
}
fpt <- function(x,extra=NULL) {
as.vector(t(p.m) %*% x)
}
ap.o <- arpack(fpt, options=list(n=nrow(p.m),nev=1,which="LM"),sym=FALSE);
invP.v <- abs(as.numeric(ap.o$vectors));
invP.v <- invP.v/sum(invP.v);
S.v <- apply(p.m,1,CompS);
SR <- sum(invP.v*S.v);
if(is.null(maxSR)==FALSE){## if provided then normalise relative to maxSR
SR <- SR/maxSR;
}
if(local){
CompNS <- function(p.v){
tmp.idx <- which(p.v>0);
if(length(tmp.idx)>1){
S <-  - sum( p.v[tmp.idx]*log(p.v[tmp.idx]) )/log(length(tmp.idx));
}
else { ### one degree nodes have zero entropy, avoid singularity.
S <- 0;
}
return(S);
}
NS.v <- apply(p.m,1,CompNS);
}else{
NS.v <- NULL;
}
sr.lo[[s]] <- list(sr=SR,inv=invP.v,s=S.v,ns=NS.v)
print(s)}
####
sr.v <- vector();
for(s in 1:length(sr.lo)){
sr.v[s] <- sr.lo[[s]]$sr;
}
devtools::document()
data("entr_adja")
data("entr_adja")
data("entr_expr")
data("entr_labels")
ComENTR(entr_expr,entr_adja,entr_labels,local=TRUE,method=1)
data(dot_df)
PACplot(dot_df)
data(exprData)
data(studyResponse)
drugsensitivity(testMatrix=exprData,
studyResponse=studyResponse,
bortIndex=bortIndex,
drug="Bosutinib",
tissueType = "all",
batchCorrect = "eb",
selection=1,
dataset = "cgp2014",colours=c('#e94753','#47a4e9'))
View(dot_df)
View(entr_labels)
devtools::document()
###论文结果部分
mRNA=read.csv("E:\\by\\数据\\CFC\\BLCAmRNA.FPKM.csv",header = T,row.names = 1)
miRNA=read.csv("E:\\by\\数据\\CFC\\BLCAmiRNA.raw.tumor.csv",header = T,row.names = 1)
lncRNA=read.csv("E:\\by\\数据\\CFC\\BLCALncRNA_FPKM_tumor.csv",header = T,row.names = 1)
CNVmatrix <- read.csv("E:\\by\\数据\\CFC\\CNV数据\\re.csv")
a=fread("E:\\by\\数据\\CFC\\甲基化数据\\HumanMethylation450",data.table = F)
library(data.table)
a=fread("E:\\by\\数据\\CFC\\甲基化数据\\HumanMethylation450",data.table = F)
a=na.omit(a)
rownames(a)=a[,1]
a=a[,-1]
View(a)
a=fread("E:\\by\\数据\\CFC\\甲基化数据\\HumanMethylation450",data.table = F)
#a=na.omit(a)
rownames(a)=a[,1]
a=a[,-1]
methylation=a
View(methylation)
a=na.omit(a)
rownames(a)=a[,1]
a=a[,-1]
methylation=a
a=fread("E:\\by\\数据\\CFC\\甲基化数据\\HumanMethylation450",data.table = F)
a=na.omit(a)
rownames(a)=a[,1]
a=a[,-1]
methylation=a
View(mRNA)
View(miRNA)
a=fread("E:\\by\\数据\\CFC\\甲基化数据\\HumanMethylation450",data.table = F)
#a=na.omit(a)
rownames(a)=a[,1]
a=a[,-1]
methylation=a
View(CNVmatrix)
rownames(CNVmatrix)=CNVmatrix[,1]
CNVmatrix=CNVmatrix[,-1]
View(lncRNA)
View(miRNA)
View(mRNA)
View(methylation)
View(CNVmatrix)
mRNA1=data.filter(mRNA,percentage=0.6)
miRNA1=data.filter(miRNA,percentage=0.6)
lncRNA1=data.filter(lncRNA,percentage=0.6)
CNVmatrix1=data.filter(CNVmatrix,percentage=0.6)
mRNA1=data.filter(mRNA,percentage=0.6)
View(CNVmatrix)
CNVmatrix1=data.filter(CNVmatrix,percentage=0.8)
mRNA1=data.filter(mRNA,percentage=0.8)
miRNA1=data.filter(miRNA,percentage=0.8)
lncRNA1=data.filter(lncRNA,percentage=0.8)
CNVmatrix1=data.filter(CNVmatrix,percentage=0.8)
methylation1=data.filter(methylation,percentage=0.8)
hist(miRNA)
####
mRNA1[mRNA1==0]<-NA
mRNA2=data.imputation(mRNA1,fun="knn")
mRNA1<-as.matrix(mRNA1)
mRNA2=data.imputation(mRNA1,fun="knn")
mRNA2=data.imputation(mRNA1,fun="mean")
View(CNVmatrix1)
View(methylation1)
View(mRNA)
miRNA1[miRNA1==0]<-NA
miRNA1<-as.matrix(miRNA1)
miRNA2=data.imputation(miRNA1,fun="mean")
lncRNA1[lncRNA1==0]<-NA
lncRNA1<-as.matrix(lncRNA1)
lncRNA2=data.imputation(lncRNA1,fun="mean")
CNVmatrix1[CNVmatrix1==0]<-NA
CNVmatrix1<-as.matrix(CNVmatrix1)
CNVmatrix2=data.imputation(CNVmatrix1,fun="mean")
methylation1[methylation1==0]<-NA
methylation1<-as.matrix(methylation1)
methylation2=data.imputation(methylation1,fun="mean")
Q
methylation2=data.imputation(methylation1,fun="mean")
mRNA3=SbyVar(mRNA2, cut.type="topk",value=1000)
View(mRNA3)
#聚类分析
setwd("G:/by/数据/lw/")
#聚类分析
setwd("E:/by/CFC")
devtools::document()
#聚类分析
setwd("G:/by/数据/lw/")
mRNAexp1=read.csv("./final_mRNA.csv",header = T,row.names = 1)
miRNAexp1=read.csv("./final_miRNA.csv",header = T,row.names = 1)
lncRNAexp1=read.csv("./final_lncRNA.csv",header = T,row.names = 1)
methylation1=read.csv("./final_methylation.csv",header = T,row.names = 1)
CNVmatrix1=read.csv("./final_CNVmatrix.csv",header = T,row.names = 1)
results = Cluster_of_cluster(mRNAexp1,miRNAexp1,lncRNAexp1,methylation1,CNVmatrix1,maxK=6,reps=50,pItem=0.8,pFeature=1,clusterAlg="hc",distance="pearson",innerLinkage="complete",seed=1262118388.71279,plot="pdf")
results$consensusClass
results$consensusMatrix
View(results)
results[[3]]$consensusMatrix
results[[3]]$consensusClass
#silhouette
sil=silhouette_SimilarityMatrix(results[[3]]$consensusClass, results[[3]]$consensusMatrix)
plot(sil)
#silhouette
pdf("silhouette_width.pdf")
plot(sil)
dev.off()
data(mRNAexp)
data(miRNAexp)
data(lncRNAexp)
data(methylation)
data(CNVmatrix)
mRNAexp=data.filter(mRNAexp,percentage=0.6)
miRNAexp=data.filter(miRNAexp,percentage=0.6)
lncRNAexp=data.filter(lncRNAexp,percentage=0.6)
methylation=data.filter(methylation,percentage=0.6)
CNVmatrix=data.filter(CNVmatrix,percentage=0.6)
mRNAexp[mRNAexp==0]<-NA
miRNAexp[miRNAexp==0]<-NA
lncRNAexp[lncRNAexp==0]<-NA
methylation[methylation==0]<-NA
CNVmatrix[CNVmatrix==0]<-NA
mRNAexp<-as.matrix(mRNAexp)
miRNAexp<-as.matrix(miRNAexp)
lncRNAexp<-as.matrix(lncRNAexp)
methylation<-as.matrix(methylation)
CNVmatrix<-as.matrix(CNVmatrix)
mRNAexp=data.imputation(mRNAexp,fun="mean")
miRNAexp=data.imputation(miRNAexp,fun="mean")
lncRNAexp=data.imputation(lncRNAexp,fun="mean")
methylation=data.imputation(methylation,fun="mean")
CNVmatrix=data.imputation(CNVmatrix,fun="mean")
results = Cluster_of_cluster(mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix,maxK=6,reps=50,pItem=0.8,pFeature=1,clusterAlg="hc",distance="pearson",innerLinkage="complete",seed=1262118388.71279,plot="pdf")
devtools::document()
###论文结果部分
mRNA=read.csv("E:\\by\\数据\\CFC\\BLCAmRNA.FPKM.csv",header = T,row.names = 1)
miRNA=read.csv("E:\\by\\数据\\CFC\\BLCAmiRNA.raw.tumor.csv",header = T,row.names = 1)
lncRNA=read.csv("E:\\by\\数据\\CFC\\BLCALncRNA_FPKM_tumor.csv",header = T,row.names = 1)
CNVmatrix <- read.csv("E:\\by\\数据\\CFC\\CNV数据\\re.csv")
rownames(CNVmatrix)=CNVmatrix[,1]
CNVmatrix=CNVmatrix[,-1]
library(data.table)
a=fread("E:\\by\\数据\\CFC\\甲基化数据\\HumanMethylation450",data.table = F)
#a=na.omit(a)
rownames(a)=a[,1]
a=a[,-1]
methylation=a
###数据过滤
mRNA1=data.filter(mRNA,percentage=0.8)
miRNA1=data.filter(miRNA,percentage=0.8)
lncRNA1=data.filter(lncRNA,percentage=0.8)
CNVmatrix1=data.filter(CNVmatrix,percentage=0.8)
methylation1=data.filter(methylation,percentage=0.8)
####数据填充
mRNA1[mRNA1==0]<-NA
mRNA1<-as.matrix(mRNA1)
mRNA2=data.imputation(mRNA1,fun="mean")
miRNA1[miRNA1==0]<-NA
miRNA1<-as.matrix(miRNA1)
miRNA2=data.imputation(miRNA1,fun="mean")
lncRNA1[lncRNA1==0]<-NA
lncRNA1<-as.matrix(lncRNA1)
lncRNA2=data.imputation(lncRNA1,fun="mean")
CNVmatrix1[CNVmatrix1==0]<-NA
CNVmatrix1<-as.matrix(CNVmatrix1)
CNVmatrix2=data.imputation(CNVmatrix1,fun="mean")
methylation1[methylation1==0]<-NA
methylation1<-as.matrix(methylation1)
methylation2=data.imputation(methylation1,fun="mean")
#特征选择
mRNA21=SbyPCA(mRNA2, PC_percent=0.9,scale = TRUE)
View(mRNA21)
View(mRNA2)
devtools::document()
usethis::use_package(ggplot2,type = "Imports")
usethis::use_package("ggplot2",type = "Imports")
usethis::use_package("IRanges",type = "Imports")
usethis::use_package("pRRophetic",type = "Imports")
usethis::use_package("preprocessCore",type = "Imports")
devtools::document()
help(package="TxDb.Hsapiens.UCSC.hg38.knownGene")
help(package="pRRophetic")
devtools::document()
Data=matrix(runif(1000),nrow = 50,ncol = 20)
geneName=paste("Gene", 1:50, sep = " ")
sampleName=paste("Sample", 1:20, sep = " ")
rownames(Data)=geneName
colnames(Data)=sampleName
index=sample(c(1:1000),60)
Data[index]=NA
result=data.imputation(Data,fun="knn")
Data=matrix(runif(1000),nrow = 50,ncol = 20)
geneName=paste("Gene", 1:50, sep = " ")
sampleName=paste("Sample", 1:20, sep = " ")
rownames(Data)=geneName
colnames(Data)=sampleName
index=sample(c(1:1000),300)
Data[index]=NA
result=data.filter(Data,percentage=0.6)
data(mRNAexp)
result=data.normalization(mRNAexp,type="feature_Median",log2=FALSE)
set.seed(7)
target <- matrix(rnorm(100*150, mean = 1, sd = 1), nrow = 100, ncol = 150)
test <- matrix(rnorm(30*150, mean = 2, sd = 2), nrow = 30, ncol = 150)
normalized_test <- quantileNormalizeByFeature(test, target)
data(CNV)
CNVmatrix <- cnvconverttomatrix(CNV)
help(package="pRRophetic2")
help(package="dplyr")
library("tidyr")
data(CNV)
CNVmatrix <- cnvconverttomatrix(CNV)
library("stringr")
CNVmatrix <- cnvconverttomatrix(CNV)
help(package="stringr")
# Masked Copy Number Segment是过滤掉了一些与生殖和性染色体相关的数据。
CNV = read.delim("E:/by/数据/CFC/CNV数据/TCGA-BLCA.cnv.tsv.gz")
## ---------------------------
## Script name: generate cnv matrix （http://www.weinformatics.cn/7c8424918d/）
## Purpose of script:
## Author: Dr. Guojun Liu
## Date Created: 2022-11-29
## Copyright (c) Guojun Liu, 2022
## Email: gjliu77@qq.com
## ---------------------------
setwd("E:/by/数据/CFC/CNV数据/")
# Masked Copy Number Segment是过滤掉了一些与生殖和性染色体相关的数据。
CNV = read.delim("TCGA-BLCA.cnv.tsv.gz")
help(package="GenomicRanges")
help(package="ChIPseeker")
# if (!require("BiocManager", quietly = TRUE))
#   install.packages("BiocManager")
# BiocManager::install("ChIPseeker")
# install.packages("ggraph", type = "binary")
pos = a
# if (!require("BiocManager", quietly = TRUE))
#   install.packages("BiocManager")
# BiocManager::install("ChIPseeker")
# install.packages("ggraph", type = "binary")
pos = CNV
pos$Chrom = paste0("chr",pos$Chrom)
peak <- GRanges(sample = pos[,1],
Segment_Mean = pos[,5],
seqnames=Rle(pos[,2]),
ranges=IRanges(pos[,3], pos[,4]),
strand=rep(c("*"), nrow(pos)))
library(GenomicRanges)
peak <- GRanges(sample = pos[,1],
Segment_Mean = pos[,5],
seqnames=Rle(pos[,2]),
ranges=IRanges(pos[,3], pos[,4]),
strand=rep(c("*"), nrow(pos)))
help(package="GRanges")
help(package="GenomicRanges")
help(package="utils")
help(package="stats")
help(package="XVector")
devtools::document()
data(CNV)
CNVmatrix <- cnvconverttomatrix(CNV)
library(GenomicRanges)
CNVmatrix <- cnvconverttomatrix(CNV)
help(package="GenomeInfoDb")
help(package="IRanges")
devtools::document()
data(mRNAexp)
data(miRNAexp)
data(lncRNAexp)
data(methylation)
data(CNVmatrix)
result=ExecuteCC(clusterNum=3,mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix,maxK=5,clusterAlg="hc",distance="pearson")
result$group
data(results)
data(meta)
maxK = 6
Kvec = 2:maxK
x1 = 0.1; x2 = 0.9 # threshold defining the intermediate sub-interval
PAC = rep(NA,length(Kvec))
names(PAC) = paste("K=",Kvec,sep="") # from 2 to maxK
for(i in Kvec){
M = results[[i]]$consensusMatrix
Fn = ecdf(M[lower.tri(M)])
PAC[i-1] = Fn(x2) - Fn(x1)
}
optK = Kvec[which.min(PAC)]
Surplot(results,meta,optK=3)
data("mRNAexp")
mRNAexp=as.matrix(mRNAexp)
Normal_Data=as.matrix(mRNAexp[,sample(1:100,20)])
result=Dif.limma(Tumor_Data=mRNAexp,Normal_Data=Normal_Data,group=NULL,topk=NULL,RNAseq=FALSE)
data(exprData)
data(studyResponse)
drugsensitivity(testMatrix=exprData,
studyResponse=studyResponse,
bortIndex=bortIndex,
drug="Bosutinib",
tissueType = "all",
batchCorrect = "eb",
selection=1,
dataset = "cgp2014",colours=c('#e94753','#47a4e9'))
data(drugAndPhenoCgp)
data(bortezomibData)
library(pRRophetic)
#a=paste("Predicted", drug,"Sensitivity")
library(pRRophetic)
data(bortezomibData)
data(drugAndPhenoCgp)
data(exprData)
data(studyResponse)
drugsensitivity(testMatrix=exprData,
studyResponse=studyResponse,
bortIndex=bortIndex,
drug="Bosutinib",
tissueType = "all",
batchCorrect = "eb",
selection=1,
dataset = "cgp2014",colours=c('#e94753','#47a4e9'))
library("ggplot2")
drugsensitivity(testMatrix=exprData,
studyResponse=studyResponse,
bortIndex=bortIndex,
drug="Bosutinib",
tissueType = "all",
batchCorrect = "eb",
selection=1,
dataset = "cgp2014",colours=c('#e94753','#47a4e9'))
devtools::document()
data("entr_adja")
data("entr_expr")
data("entr_labels")
ComENTR(entr_expr,entr_adja,entr_labels,local=TRUE,method=1)
data(mRNAexp)
data(miRNAexp)
colnames(miRNAexp)=substr(colnames(miRNAexp),1,15)
colnames(miRNAexp)=gsub("[.]","-",colnames(miRNAexp))
colnames(mRNAexp)=substr(colnames(mRNAexp),1,15)
a=intersect(x=colnames(miRNAexp),y=colnames(mRNAexp))
mRNAexp1=mRNAexp[,match(a,colnames(mRNAexp))]
miRNAexp1=miRNAexp[,match(a,colnames(miRNAexp))]
GBM=list(mRNAexp=mRNAexp1,miRNAexp=miRNAexp1)
result=ExecuteSNF(GBM, clusterNum=3, K=20, alpha=0.5, t=20)
sil=silhouette_SimilarityMatrix(result$group, result$distanceMatrix)
plot(sil)
data(mRNAexp)
data(miRNAexp)
colnames(miRNAexp)=substr(colnames(miRNAexp),1,15)
colnames(miRNAexp)=gsub("[.]","-",colnames(miRNAexp)
colnames(miRNAexp)=gsub("[.]","-",colnames(miRNAexp))
data(mRNAexp)
data(miRNAexp)
colnames(miRNAexp)=substr(colnames(miRNAexp),1,15)
colnames(miRNAexp)=gsub("[.]","-",colnames(miRNAexp))
colnames(mRNAexp)=substr(colnames(mRNAexp),1,15)
a=intersect(x=colnames(miRNAexp),y=colnames(mRNAexp))
mRNAexp1=mRNAexp[,match(a,colnames(mRNAexp))]
miRNAexp1=miRNAexp[,match(a,colnames(miRNAexp))]
GBM=list(mRNAexp=mRNAexp1,miRNAexp=miRNAexp1)
result=ExecuteSNF(GBM, clusterNum=3, K=20, alpha=0.5, t=20)
sil=silhouette_SimilarityMatrix(result$group, result$distanceMatrix)
results[[2]]$consensusTree
results[[2]]$consensusClass
results[[2]]$consensusMatrix
sil=silhouette_SimilarityMatrix(results[[2]]$consensusClass, results[[2]]$consensusMatrix)
plot(sil)
data(mRNAexp)
data(miRNAexp)
data(lncRNAexp)
data(methylation)
data(CNVmatrix)
result=ExecuteCC(clusterNum=3,mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix,maxK=5,clusterAlg="hc",distance="pearson")
result$group
result$distanceMatrix
sil=silhouette_SimilarityMatrix(result$group, result$distanceMatrix)
plot(sil)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
data(exprData)
data(studyResponse)
drugsensitivity(testMatrix=exprData,
studyResponse=studyResponse,
bortIndex=bortIndex,
drug="Bosutinib",
tissueType = "all",
batchCorrect = "eb",
selection=1,
dataset = "cgp2014",colours=c('#e94753','#47a4e9'))
data(drugAndPhenoCgp)
#a=paste("Predicted", drug,"Sensitivity")
library(pRRophetic)
data(drugAndPhenoCgp)
usethis::use_data(drugAndPhenoCgp)
usethis::use_data(drugSensitivityDataCgp)
devtools::document()
data(exprData)
data(studyResponse)
drugsensitivity(testMatrix=exprData,
studyResponse=studyResponse,
bortIndex=bortIndex,
drug="Bosutinib",
tissueType = "all",
batchCorrect = "eb",
selection=1,
dataset = "cgp2014",colours=c('#e94753','#47a4e9'))
data(drugAndPhenoCgp)
library(pRRophetic)
data(drugAndPhenoCgp)
usethis::use_data(drugToCellLineDataCgp)
usethis::use_data(gdsc_brainarray_syms)
devtools::document()
data(exprData)
data(studyResponse)
drugsensitivity(testMatrix=exprData,
studyResponse=studyResponse,
bortIndex=bortIndex,
drug="Bosutinib",
tissueType = "all",
batchCorrect = "eb",
selection=1,
dataset = "cgp2014",colours=c('#e94753','#47a4e9'))
